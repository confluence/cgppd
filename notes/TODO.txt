--------------------------------------------------------------------------------
NOW
--------------------------------------------------------------------------------

VERY NEXT THING:

* validation
    * send email about errors :/
    * rename the reference conformations test, since it is actually useful
    * test that potential is the same for rigid protein with and without linkers enabled


* radius of gyration

* tests
    * fix crappy old tests

* assuming that there is always a 300k replica after all; check the maths
* paircount needs to be updated for flexible linkers

* start writing up
    * skeleton
    * design / implementation of changes chapter

TEST

* better unit tests of important simulation and replica functions
* use and test init function for replica


--------------------------------------------------------------------------------
SOON
--------------------------------------------------------------------------------

TEST

* stuff that's disabled, e.g. Kahan sums

POSTPROCESS

* write it completely separately in Python

OPTIONS

* make flex and crankshaft moves optional

REFACTOR

* Linkers, etc. don't actually *need* to be arrays. Just keep them as vectors.
* is it really necessary to use custom vector3f and vector3d types?
* is it really necessary to use size_t for iterators instead of int?

* Reorder methods and attributes, especially in header.  SETUP, MC MOVES, POTENTIAL CALCULATION

* MOLECULE: constructor / destructor
    * reserveResidueSpace not consistently used?
    * maybe use init from pdb function with rotation / translation params?
    * make Molecule::rotate call Molecule::setRotation, etc.?
* AMINO ACIDS
    * clean up read from file

--------------------------------------------------------------------------------
LATER / MAYBE
--------------------------------------------------------------------------------

TWISTER

* make sure all the non-crowders are actually loaded before all the crowders (don't rely on the input file to be correct)
* single rng for all replicas
    * CAUTION: this may be a problem because of threading (safety and/or performance). Look into it in greater detail.

ADD

* Extra MC moves (just domain rotation?) on GPU?
* Make angle terms, crankshaft moves optional; test efficiency / accuracy of including them
* Make flexing optional; doesn't really work in cases with flexible loops coming out of domains.
* Validation with a simple test case
* Is the caching stuff actually a good idea, or is it just overhead?
    * Write another version of the CPU bond calculation, which throws out the caching and calculates everything
* What happens if molecule consists of multiple chains?

CHECKPOINTING

* put checkpointing back in
    * save individual pdb files
    * save checkpointing file with list of pdb files to load and iteration count
    * when resuming, make sure the iteration count is increased and e.g. sampling starts immediately if it needs to
    * save/load:
        * parameters.currentStep
        * per-replica cumulative data (same stuff that is swapped during replica exchange)
        * per-simulation cumulative data (total tests and exchanges)

OPTIMISE / TEST

* is caching of internal potential subtotals important?

* is it *actually* worth summing vector components separately?

* init of gpu memory seems slower (underlying software change?)

* Now that there's more time, try doing stuff on GPU:
    * one molecule only (since only one molecule will have internal changes?)
    * but then we have to cache at the molecule level at least, so that potential comparison works
    * LJ/DH seems like a really good idea
    * single kernel based on segments, or aditional kernel just for internal segments?
    * Friedrichs, et al.have a kernel for bonded forces

ADD

* Multiple GPUs?  Does that work?
